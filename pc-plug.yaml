## Based on https://github.com/JamesSwift/localbytes-plug-pm/blob/main/localbytes-plug-pm.yaml

substitutions:
  # Device Names
  name: "localbytes-plug"
  friendly_name: "PC Plug"
  
  # Icon
  main_icon: "power-socket-uk"

  # Default Relay State
  # Aka: `restore_mode` in documentation
  # Options: `RESTORE_DEFAULT_OFF`, `RESTORE_DEFAULT_ON`, `ALWAYS_ON` & `ALWAYS_OFF`
  default_state: "RESTORE_DEFAULT_ON"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"

  on_boot:
    priority: 300
    then:
      #Signal to the template switches that their initial values have been loaded      
      globals.set:
        id: setupComplete
        value: "true"

esp8266:
  board: esp01_1m
  restore_from_flash: true

logger:

ota:

wifi:
  output_power: 18db
  power_save_mode: light
  networks: !secret wifi

captive_portal:

web_server:
  port: 80

time:
  - platform: homeassistant
    timezone: Europe/London

api:

globals:
  - id: voltage_multiply
    type: float
    restore_value: true
    initial_value: "0.3"
    
  - id: power_multiply 
    type: float
    restore_value: true
    initial_value: "0.133"
    
  - id: current_multiply 
    type: float
    restore_value: true
    initial_value: "0.805"

  - id: setupComplete
    type: bool
    restore_value: no
    initial_value: "false"
  
binary_sensor:
  # Push Button (Toggles Relay When Pressed)
  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "Button"
    on_click:

      - max_length: 1s
        then:
          if:
            condition:
              switch.is_off: disable_button
            then:
              switch.toggle: relay
      
      - min_length: 1.5s
        max_length: 5s
        then:
          switch.toggle: disable_led
      
      - min_length: 8s
        max_length: 12s
        then:
          switch.toggle: disable_button
          
  - platform: status
    name: "Server Status"

switch:
  # Relay (As Switch)
  - platform: gpio
    name: ""
    icon: "mdi:${main_icon}"
    pin: GPIO14
    id: relay
    restore_mode: "${default_state}"
    on_turn_on:
      if:
        condition:
          switch.is_off: disable_led
        then:
          light.turn_on: led
    on_turn_off:
      - light.turn_off: led
  
  - platform: template
    name: "Disable LED"
    id: disable_led
    icon: "mdi:led-variant-off"
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      - if:
          condition:
            lambda: 'return id(setupComplete) == true;'
          then:
          #Flash twice
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
      #Final state
      - light.turn_off: led
    on_turn_off:
      - if:
          condition:
            lambda: 'return id(setupComplete) == true;'
          then:
          #Flash twice
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 1s
      #Final state
      - if:
          condition:
            switch.is_on: relay
          then:
            light.turn_on: led


  
  - platform: template
    name: "Disable button"
    id: disable_button
    icon: "mdi:toggle-switch-off-outline"    
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      - if:
          condition:
            lambda: 'return id(setupComplete) == true;'
          then:
          #Flash thrice
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
        #Final state
      - if:
          condition:
            or:
              - switch.is_off: relay
              - switch.is_on: disable_led
          then:
            light.turn_off: led
    on_turn_off:
      - if:
          condition:
            lambda: 'return id(setupComplete) == true;'
          then:
          #Flash thrice
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 0.15s
          - light.turn_on: led
          - delay: 0.15s
          - light.turn_off: led
          - delay: 1s
      #Final state
      - if:
          condition:
            - switch.is_on: relay
            - switch.is_off: disable_led
          then:
            light.turn_on: led

sensor:
  # WiFi Signal Sensor
  - platform: wifi_signal
    name: "WiFi signal"
    update_interval: 60s
    
  # Power Monitoring
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO4
    cf1_pin: GPIO5
    change_mode_every: 3
    update_interval: 6s
    
    voltage:
      name: "Voltage"
      id: voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      filters:
        - lambda: return x * id(voltage_multiply);
        
    power:
      name: "Power"
      id: power
      unit_of_measurement: W
      accuracy_decimals: "1"
      filters:
        - lambda: return x * id(power_multiply);
        
    current:
      name: "Current"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        - lambda: return x * id(current_multiply);
          
  # Total daily energy sensor
  - platform: total_daily_energy
    name: "Daily energy"
    power_id: power
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh


# Relay State LED
output:
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO13
      inverted: true

light:
  - platform: binary
    output: state_led
    id: led