## BOILERPLATE

esphome:
  name: atom-matrix
  friendly_name: "Matrix"
  comment: "M5Stack ATOM Matrix for LED status updates in the Living Room"

esp32:
  board: m5stack-atom
  framework:
    type: arduino

logger:

wifi:
  networks: !secret wifi

api:
  encryption:
    key: "JNj7PgqTdG1lCKrqJNK3bMwSIsQ4Hvv+O9bvngbCZ0s="

ota:
  - platform: esphome
    password: !secret ota_password

time:
  - platform: homeassistant
    id: time_now

## STANDARD BLE PROXY SETUP
# Disabled because we don't need one in the living room yet

# esp32_ble_tracker:
#   scan_parameters:
#     interval: 1100ms
#     window: 1100ms
#     active: true

# bluetooth_proxy:
#   active: true

## HARDWARE

sensor:
  - platform: internal_temperature
    name: "CPU temperature"
  - platform: wifi_signal
    id: wifi_signal_stringth
    name: "Signal strength"
    update_interval: 5s

button:
  - platform: safe_mode
    name: "Reboot safe mode"
    entity_category: diagnostic
  - platform: restart
    name: "Reboot"
    entity_category: diagnostic

binary_sensor:
  - platform: gpio
    pin:
      number: 39
      inverted: true
    name: Button
    on_press:
      then:
        # - light.toggle: status_led

light:
  - platform: fastled_clockless # 5x5 RGB Matrix (WS2812C)
    chipset: WS2812
    pin: 27
    num_leds: 25
    rgb_order: GRB
    name: "Display"
    id: matrix_light
    color_correct: [30%, 30%, 30%] # Limit LED power to avoid damage to the matrix
    default_transition_length: 0s
    restore_mode: ALWAYS_ON

# display:
#   - platform: addressable_light
#     addressable_light_id: matrix_light
#     id: matrix_display
#     height: 5
#     width: 5
#     rotation: 180 # USB port is at the bottom
#     update_interval: 2s
#     lambda: |-
#       it.fill(COLOR_ON);
display:
  - platform: addressable_light
    id: matrix_display
    addressable_light_id: matrix_light
    width: 5
    height: 5
    rotation: 180Â° # USB port is at the bottom
    update_interval: 16ms
    # show_test_card: true
    lambda: |-
      // Draw a bulls-eye pattern
      Color red = Color(0xFF0000);
      Color green = Color(0x00FF00);
      Color blue = Color(0x0000FF);
      auto time = id(time_now).now();
      int day = time.day_of_month;
      if (day == 0) {
        it.rectangle(0, 0, 5, 5, red);
      } else {
        it.rectangle(0, 0, 5, 5, green);
      }

## DEVICE STATE
#
select:
  - platform: template
    id: mode
    name: "Mode"
    optimistic: true
    options:
      - wifi_signal
      - disabled
    initial_option: wifi_signal
